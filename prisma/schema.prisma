// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Cart          Cart[]
  Product       Product[]
  hashedPassword String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  favoriteIds String[] 
}

model Account {
  id                String  @id @default(cuid())
  customerId        String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  customer          Customer   @relation(fields: [customerId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model Cart {
    id        String    @id @default(cuid())
    customerId    String
    Product   Product[]
    customer  Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
}

model Product {
    id          String   @id @default(cuid())
    image       String
    name        String
    description String
    customerId  String
    price       Float
    cartId      String
    category    String
    cart        Cart    @relation(fields: [cartId], references: [id], onDelete: Cascade)
    customer    Customer @relation(fields: [customerId], references: [id])

} 


model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  customerId       String
  expires      DateTime
  customer        Customer     @relation(fields: [customerId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}